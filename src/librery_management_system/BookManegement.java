/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package librery_management_system;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.TextField;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import librery_management_system.commen.ButtonColor;

/**
 *
 * @author geeth
 */
public class BookManegement extends javax.swing.JFrame {
    /**
     * Creates new form BookManegement
     */
    public BookManegement() {
        initComponents();
        screenSize();
        tableSetins();
        genareteBookId();
         this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jPanel1 = new javax.swing.JPanel();
        btnSearchBook = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lbAruna = new javax.swing.JLabel();
        lbLibrary = new javax.swing.JLabel();
        btnDashBoard = new javax.swing.JButton();
        btnAddNewBook = new javax.swing.JButton();
        AddBookFe = new javax.swing.JLayeredPane();
        jLabel11 = new javax.swing.JLabel();
        txtQty3 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtAuthor = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtBookName = new javax.swing.JTextField();
        txtBookId = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        txtCategary = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb1 = new javax.swing.JTable();
        btnInsert = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLayeredPane1.setPreferredSize(new java.awt.Dimension(1920, 1080));
        jLayeredPane1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 102, 204));

        btnSearchBook.setBackground(new java.awt.Color(0, 102, 204));
        btnSearchBook.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 27)); // NOI18N
        btnSearchBook.setForeground(new java.awt.Color(255, 255, 255));
        btnSearchBook.setText("Search Book");
        btnSearchBook.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnSearchBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSearchBookMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSearchBookMouseExited(evt);
            }
        });
        btnSearchBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchBookActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(204, 0, 51));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\geeth\\Downloads\\lbBook.png")); // NOI18N

        lbAruna.setFont(new java.awt.Font("Tahoma", 1, 40)); // NOI18N
        lbAruna.setForeground(new java.awt.Color(255, 255, 255));
        lbAruna.setText("Aruna");
        lbAruna.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbArunaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbArunaMouseExited(evt);
            }
        });

        lbLibrary.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        lbLibrary.setForeground(new java.awt.Color(255, 255, 255));
        lbLibrary.setText("Library");
        lbLibrary.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbLibraryMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbLibraryMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbAruna, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lbLibrary)))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(lbAruna)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbLibrary, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnDashBoard.setBackground(new java.awt.Color(0, 102, 204));
        btnDashBoard.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 27)); // NOI18N
        btnDashBoard.setForeground(new java.awt.Color(255, 255, 255));
        btnDashBoard.setText("Dashboard");
        btnDashBoard.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnDashBoard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnDashBoardMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnDashBoardMouseExited(evt);
            }
        });
        btnDashBoard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDashBoardActionPerformed(evt);
            }
        });

        btnAddNewBook.setBackground(new java.awt.Color(0, 102, 204));
        btnAddNewBook.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 27)); // NOI18N
        btnAddNewBook.setForeground(new java.awt.Color(255, 255, 255));
        btnAddNewBook.setText("Add New Book");
        btnAddNewBook.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnAddNewBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAddNewBookMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAddNewBookMouseExited(evt);
            }
        });
        btnAddNewBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewBookActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnSearchBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnDashBoard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnAddNewBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(btnDashBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAddNewBook, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSearchBook, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(609, Short.MAX_VALUE))
        );

        jLayeredPane1.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 320, 1010));

        AddBookFe.setBackground(new java.awt.Color(204, 204, 204));
        AddBookFe.setOpaque(true);
        AddBookFe.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel11.setText("QTY");
        AddBookFe.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 220, 207, 43));

        txtQty3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtQty3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQty3ActionPerformed(evt);
            }
        });
        txtQty3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtQty3KeyTyped(evt);
            }
        });
        AddBookFe.add(txtQty3, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 220, 458, 43));

        jLabel12.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel12.setText("Price");
        AddBookFe.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 207, 43));

        jLabel13.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel13.setText("Category");
        AddBookFe.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 160, 207, 42));

        txtAuthor.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAuthorActionPerformed(evt);
            }
        });
        txtAuthor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAuthorKeyTyped(evt);
            }
        });
        AddBookFe.add(txtAuthor, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 160, 458, 43));

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel5.setText("Author");
        AddBookFe.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 207, 42));

        jLabel14.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel14.setText("Book Name");
        AddBookFe.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 100, 207, 43));

        txtBookName.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtBookName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBookNameActionPerformed(evt);
            }
        });
        txtBookName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBookNameKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBookNameKeyTyped(evt);
            }
        });
        AddBookFe.add(txtBookName, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 100, 458, 43));

        txtBookId.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtBookId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBookIdActionPerformed(evt);
            }
        });
        AddBookFe.add(txtBookId, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 100, 458, 43));

        jLabel15.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel15.setText("Book Id");
        AddBookFe.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 207, 43));

        txtPrice.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });
        txtPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPriceKeyTyped(evt);
            }
        });
        AddBookFe.add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 220, 458, 43));

        txtCategary.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtCategary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCategaryActionPerformed(evt);
            }
        });
        txtCategary.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCategaryKeyTyped(evt);
            }
        });
        AddBookFe.add(txtCategary, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 160, 458, 43));

        jLabel6.setBackground(new java.awt.Color(204, 0, 51));
        jLabel6.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 48)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Add Book");
        jLabel6.setOpaque(true);
        AddBookFe.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1450, 69));

        jLayeredPane1.add(AddBookFe, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 10, 1450, 310));

        tb1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book Id", "Book Name", "Author", "Category", "Price", "QTY"
            }
        ));
        tb1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tb1MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tb1MousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tb1);

        jLayeredPane1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 340, 1450, 410));

        btnInsert.setBackground(new java.awt.Color(0, 102, 204));
        btnInsert.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 36)); // NOI18N
        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });
        jLayeredPane1.add(btnInsert, new org.netbeans.lib.awtextra.AbsoluteConstraints(1620, 810, 213, 66));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnDashBoardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDashBoardActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnDashBoardActionPerformed

    private void btnDashBoardMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDashBoardMouseExited
         ButtonColor.defaultColor(btnDashBoard);
    }//GEN-LAST:event_btnDashBoardMouseExited

    private void btnDashBoardMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDashBoardMouseEntered
         ButtonColor.buttonHiliter(btnDashBoard);
    }//GEN-LAST:event_btnDashBoardMouseEntered

    private void lbLibraryMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbLibraryMouseExited
        lbAruna.setForeground(Color.WHITE);
        lbLibrary.setForeground(Color.WHITE);
    }//GEN-LAST:event_lbLibraryMouseExited

    private void lbLibraryMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbLibraryMouseEntered
        lbAruna.setForeground(Color.YELLOW);
        lbLibrary.setForeground(Color.YELLOW);
    }//GEN-LAST:event_lbLibraryMouseEntered

    private void lbArunaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbArunaMouseExited
        lbAruna.setForeground(Color.WHITE);
        lbLibrary.setForeground(Color.WHITE);
    }//GEN-LAST:event_lbArunaMouseExited

    private void lbArunaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbArunaMouseEntered
        lbAruna.setForeground(Color.YELLOW);
        lbLibrary.setForeground(Color.YELLOW);
    }//GEN-LAST:event_lbArunaMouseEntered

    private void txtQty3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQty3ActionPerformed
        if(btnInsert.getText()!="Update"){
        cheakDuplicate();
         dataAdd();
        }
        
    }//GEN-LAST:event_txtQty3ActionPerformed

    private void txtAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAuthorActionPerformed
     txtCategary.grabFocus();
    }//GEN-LAST:event_txtAuthorActionPerformed

    private void txtBookNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBookNameActionPerformed
        txtAuthor.grabFocus();
    }//GEN-LAST:event_txtBookNameActionPerformed

    private void txtBookIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBookIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBookIdActionPerformed

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
     txtQty3.grabFocus();
    }//GEN-LAST:event_txtPriceActionPerformed

    private void txtCategaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCategaryActionPerformed
       txtPrice.grabFocus();
    }//GEN-LAST:event_txtCategaryActionPerformed

    private void btnSearchBookMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSearchBookMouseExited
       ButtonColor.defaultColor(btnSearchBook);
    }//GEN-LAST:event_btnSearchBookMouseExited

    private void btnSearchBookMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSearchBookMouseEntered
        ButtonColor.buttonHiliter(btnSearchBook);
    }//GEN-LAST:event_btnSearchBookMouseEntered

    private void btnSearchBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchBookActionPerformed
       dialogBox();
    }//GEN-LAST:event_btnSearchBookActionPerformed

    private void btnAddNewBookMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddNewBookMouseEntered
         ButtonColor.buttonHiliter(btnAddNewBook);
    }//GEN-LAST:event_btnAddNewBookMouseEntered

    private void btnAddNewBookMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddNewBookMouseExited
        ButtonColor.defaultColor(btnAddNewBook);
    }//GEN-LAST:event_btnAddNewBookMouseExited

    private void btnAddNewBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewBookActionPerformed
     clearTextFeald();
      DefaultTableModel df =(DefaultTableModel)tb1.getModel();
      df.setRowCount(0);
      genareteBookId();
      btnInsert.setText("Insert");
     
     
    }//GEN-LAST:event_btnAddNewBookActionPerformed

    private void tb1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb1MousePressed
          try{
        DefaultTableModel df =(DefaultTableModel)tb1.getModel();
       Vector v = new Vector();
       for(int x = 0;x<tb1.getColumnCount();x++){
       String s = df.getValueAt(tb1.getSelectedRow(), x).toString();
       v.add(s);
       }
      txtBookId.setText(v.get(0).toString());
      txtBookName.setText(v.get(1).toString());
      txtAuthor.setText(v.get(2).toString());
      txtCategary.setText(v.get(3).toString());
      txtPrice.setText(v.get(4).toString());
      txtQty3.setText(v.get(5).toString());
      
       }catch(Exception e){}
    }//GEN-LAST:event_tb1MousePressed

    private void txtBookNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBookNameKeyPressed
     
    }//GEN-LAST:event_txtBookNameKeyPressed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        if(evt.getActionCommand()=="Insert"){
        try{
        for(int row =0; row < tb1.getRowCount();row++){
            String itemid=tb1.getValueAt(row, 0).toString().trim();
            String bookName=tb1.getValueAt(row, 1).toString().trim();
            String author=tb1.getValueAt(row, 2).toString().trim();
            String category =tb1.getValueAt(row, 3).toString().trim();
            String price=tb1.getValueAt(row, 4).toString().trim();
            String qty=tb1.getValueAt(row, 5).toString().trim();
            String date = new SimpleDateFormat("yyyy-MM-dd- HH:mm:ss").format(new Date());
            String invitemSQL="insert into book_tb values ('"+itemid+"','"+bookName+"','"+author+"','"+category+"','"+price+"','"+qty+"','"+date+"','"+"1"+"')";
            DB.iud(invitemSQL);
           }
        DefaultTableModel dtm =(DefaultTableModel) tb1.getModel();
        dtm.setRowCount(0);
        }catch(Exception e){
        e.printStackTrace();
        }
        }else if(evt.getActionCommand()=="Update"){
            try {
                DB.iud("update book_tb set book_name='"+txtBookName.getText().toUpperCase()+"',author='"+txtAuthor.getText().toUpperCase()+"',category='"+txtCategary.getText().toUpperCase()+"',price='"+txtPrice.getText().toUpperCase()+"',qty='"+txtQty3.getText().toUpperCase()+"' where book_id='"+txtBookId.getText()+"'");
                 ResultSet serch = DB.serch("select * from book_tb where book_id='"+txtBookId.getText()+"'");
               DefaultTableModel dtm =(DefaultTableModel) tb1.getModel();
               dtm.setRowCount(0);
               if(serch.next()){
               Vector v = new Vector();
               v.add(serch.getString("book_id"));
               v.add(serch.getString("book_name"));
               v.add(serch.getString("author"));
               v.add(serch.getString("category"));
               v.add(serch.getString("price"));
               v.add(serch.getString("qty"));
               dtm.addRow(v);
               }
                clearTextFeald();
                genareteBookId();
         
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnInsertActionPerformed

    private void txtPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPriceKeyTyped
        if(!Character.isDigit(evt.getKeyChar())){
      evt.consume();
      }
    }//GEN-LAST:event_txtPriceKeyTyped

    private void txtQty3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQty3KeyTyped
     if(!Character.isDigit(evt.getKeyChar())){
      evt.consume();
      }
    }//GEN-LAST:event_txtQty3KeyTyped

    private void txtCategaryKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCategaryKeyTyped
         char keyChar = evt.getKeyChar();
        boolean isDigit = Character.isDigit(keyChar);
        if(isDigit){
        evt.consume();
        }
    }//GEN-LAST:event_txtCategaryKeyTyped

    private void txtBookNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBookNameKeyTyped
    char keyChar = evt.getKeyChar();
        boolean isDigit = Character.isDigit(keyChar);
        if(isDigit){
        evt.consume();
        }
    }//GEN-LAST:event_txtBookNameKeyTyped

    private void txtAuthorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAuthorKeyTyped
        char keyChar = evt.getKeyChar();
        boolean isDigit = Character.isDigit(keyChar);
        if(isDigit){
        evt.consume();
        }
    }//GEN-LAST:event_txtAuthorKeyTyped

    private void tb1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_tb1MouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookManegement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookManegement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookManegement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookManegement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookManegement().setVisible(true);
            }
        });
    }

    private void screenSize() {
    this.setExtendedState(JFrame.MAXIMIZED_BOTH);
    }
    
     private void dialogBox() {
          TextField bookID = new TextField();
        bookID.setFont(new Font("Arial", Font.BOLD, 20));
        JPanel jp = new JPanel(new BorderLayout(0, 0));
        JLabel jl = new JLabel("Enter book id");
        jl.setFont(new Font("Arial", Font.BOLD, 16));
        jp.add(jl, BorderLayout.NORTH);
        jp.add(bookID, BorderLayout.SOUTH);
        int showConfirmDialog = JOptionPane.showConfirmDialog(this, jp);
        
        if(showConfirmDialog==JOptionPane.YES_OPTION){
             if(bookID.getText().equals("")){
              dialogBox();
              }else{
              bookSearch(bookID.getText().trim().toUpperCase());
             }
        }
    }
     
     
    private void bookSearch(String text) {
       if(text.contains("BN")){
      try {
               btnInsert.setText("Update");
               ResultSet serch = DB.serch("select * from book_tb where book_id='"+text+"'");
           DefaultTableModel dtm =(DefaultTableModel) tb1.getModel();
           dtm.setRowCount(0);
           if(serch.next()){
               Vector v = new Vector();
               v.add(serch.getString("book_id"));
               v.add(serch.getString("book_name"));
               v.add(serch.getString("author"));
               v.add(serch.getString("category"));
               v.add(serch.getString("price"));
               v.add(serch.getString("qty"));
               dtm.addRow(v);
               }
           } catch (Exception e) {
               e.printStackTrace();
           }
       }else{
      
       }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLayeredPane AddBookFe;
    private javax.swing.JButton btnAddNewBook;
    private javax.swing.JButton btnDashBoard;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnSearchBook;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbAruna;
    private javax.swing.JLabel lbLibrary;
    private javax.swing.JTable tb1;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtBookId;
    private javax.swing.JTextField txtBookName;
    private javax.swing.JTextField txtCategary;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtQty3;
    // End of variables declaration//GEN-END:variables

    private void genareteBookId() {
        try {
            ResultSet rs = DB.serch("select count(book_id) as x from book_tb");
            if(rs.next()){
                String counts = rs.getString("x");
                int count = Integer.parseInt(counts);
               ++count;
                if(count<10){
                txtBookId.setText("BN0000"+count);
                txtBookId.setEditable(false);
                }else if(count<100){
                 txtBookId.setText("BN000"+count);
                txtBookId.setEditable(false);
                }else if(count<1000){
                txtBookId.setText("BN00"+count);
                txtBookId.setEditable(false);
                }else if(count<10000){
                txtBookId.setText("BN0"+count);
                txtBookId.setEditable(false);
                }else if(count<100000){
                txtBookId.setText("BN"+count);
                txtBookId.setEditable(false);
                }
            }
            txtBookName.grabFocus();
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    private void clearTextFeald() {
       txtBookId.setText(null);
       txtBookName.setText(null);
       txtAuthor.setText(null);
       txtCategary.setText(null);
       txtPrice.setText(null);
       txtQty3.setText(null);
    }
     private void tableSetins(){
    tb1.getTableHeader().setFont(new Font("Arial",Font.BOLD,15));
    tb1.getTableHeader().setOpaque(false);
    tb1.getTableHeader().setBackground(Color.WHITE);
    tb1.getTableHeader().setForeground(Color.BLACK);
    tb1.setRowHeight(50);
    tb1.setFont(new Font ("Arial",Font.BOLD,13));
} 

    private void generateBookIdT() {
        try {
            ResultSet rs = DB.serch("select count(book_id) as x from book_tb");
             DefaultTableModel dtm =(DefaultTableModel) tb1.getModel();
             int countT=dtm.getRowCount();
               if(rs.next()){
                String counts = rs.getString("x");
                int count = Integer.parseInt(counts);
                count=count+countT+1;
                   System.out.println(count);
                 if(count<10){
                txtBookId.setText("BN0000"+count);
                txtBookId.setEditable(false);
                }else if(count<100){
                 txtBookId.setText("BN000"+count);
                txtBookId.setEditable(false);
                }else if(count<1000){
                txtBookId.setText("BN00"+count);
                txtBookId.setEditable(false);
                }else if(count<10000){
                txtBookId.setText("BN0"+count);
                txtBookId.setEditable(false);
                }else if(count<100000){
                txtBookId.setText("BN"+count);
                txtBookId.setEditable(false);
                
                }
                     }
        } catch (Exception e) {
        }
    }

    private void dataAdd() {
      
        DefaultTableModel dtm =(DefaultTableModel) tb1.getModel();
        Vector v = new Vector();
        v.add(txtBookId.getText());
        v.add(txtBookName.getText().toUpperCase());
        v.add(txtAuthor.getText().toUpperCase());
        v.add(txtCategary.getText().toUpperCase());
        v.add(Double.parseDouble(txtPrice.getText()));
        v.add(Integer.parseInt(txtQty3.getText()));
        dtm.addRow(v);
        clearTextFeald();
        generateBookIdT();
        txtBookName.grabFocus();
       
    }

    private void cheakDuplicate() {
            for (int i = 0; i < tb1.getRowCount(); i++) {
            String JitemID = tb1.getValueAt(i, 0).toString();
            if(txtBookId.getText().equals(JitemID)){
                DefaultTableModel dtm =(DefaultTableModel) tb1.getModel();
                 dtm.removeRow(i);
                 break;
            }
        }    
    }
}
